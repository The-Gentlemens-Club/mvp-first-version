Refine the UI/UX of GentlemenClub-PoC-version to make it competition-ready, enhancing the website’s visual appeal, interactivity, and performance while preserving The Gentlemen's Club’s “Old Luxury” aesthetic (dark blue #1E3A8A, gold #D4AF37, Playfair Display font, Investor Deck Slide 9) and luxurious, compliant GambleFi DAO story (Slides 2, 5). Focus on improving the homepage, NFT Collection, betting interface, and DAO dashboard for a startup competition pitch.

Improvements:
1. **Animations**:
   - Add hover effects to NFT cards (`nft-collection.html`) and buttons (all pages): `transform: scale(1.05)` with 0.3s transition.
   - Apply fade-in animation to hero section (`index.html`) on page load.
   - Add smooth scroll for navigation links.
2. **Responsiveness**:
   - Optimize all pages for mobile (1-column, <768px) and desktop (2–3 columns, >768px) using Tailwind CSS or media queries.
   - Ensure NFT grid (`nft-collection.html`) adapts dynamically.
3. **NFT Collection (`nft-collection.html`)**:
   - Add filter/sort buttons (e.g., “Sort by Rarity”, “Filter by Tier”) using `nfts.js` to query `nfts.json`.
   - Create a mock “Mint NFT” modal with KYC prompt (Slide 6: Compliance).
   - Ensure 6–8 NFT cards with images, titles (e.g., “Gold Tier NFT”), and descriptions (e.g., “1% $GTLM staking bonus”, Slide 5).
4. **Betting Interface (`betting.html`)**:
   - Add mock real-time bet updates (e.g., “Bet Placed: 100 $GTLM”) with fade-in animation.
   - Include KYC toggle visual (e.g., “Verified” badge, Slide 6).
5. **DAO Dashboard (`dao.html`)**:
   - Add mock real-time treasury updates (e.g., “Treasury: 800 $GTLM”, Slide 4) with fade-in.
   - Use collapsible menus for voting options (Slide 3).
6. **Performance**:
   - Compress images in `/assets` (<100KB).
   - Minify `styles.css` and JS files (e.g., `nfts.js`).
7. **Compliance**:
   - Add a polished KYC modal across pages (e.g., “Complete KYC to Access Features”, Slide 6).
8. **Documentation**:
   - Update `UI-UX-Report.md` with changes, linking to Investor Deck slides (e.g., “NFT Collection supports Slide 5”).
   - Update `README.md` to highlight competition readiness.

Constraints:
- Use existing stack (Node.js, JavaScript, HTML/CSS, or React if in `package.json`).
- Avoid external APIs or file I/O unless mocked.
- Update `/public` or `/src`, preserving existing pages.
- Do not modify smart contracts (e.g., `governance.sol`) unless needed for UI.
- Add comments (e.g., `// Slide 9: Old Luxury styling`).

Output:
- Updated `index.html`, `nft-collection.html`, `betting.html`, `dao.html`, `styles.css`, `nfts.js`.
- Optimized `/assets` with compressed images.
- Updated `UI-UX-Report.md` and `README.md` with competition-ready summary.